<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.whoseturn.api.configuration.HibernateConfigJpaTest" tests="2" skipped="0" failures="0" errors="0" timestamp="2015-11-25T16:35:27" hostname="user-PC01" time="0.177">
  <properties/>
  <testcase name="firstHibernateWithoutTransactionTest" classname="com.whoseturn.api.configuration.HibernateConfigJpaTest" time="0.142"/>
  <testcase name="firstHibernateWithTransactionTest" classname="com.whoseturn.api.configuration.HibernateConfigJpaTest" time="0.033"/>
  <system-out><![CDATA[17:35:24,134  INFO DefaultTestContextBootstrapper:259 - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
17:35:24,159  INFO DefaultTestContextBootstrapper:185 - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4534ed74, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@520df109, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@4996507f, org.springframework.test.context.support.DirtiesContextTestExecutionListener@62fc4f15, org.springframework.test.context.transaction.TransactionalTestExecutionListener@414173, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3df97dcb]
17:35:24,375  INFO GenericApplicationContext:577 - Refreshing org.springframework.context.support.GenericApplicationContext@409e6a9b: startup date [Wed Nov 25 17:35:24 CET 2015]; root of context hierarchy
17:35:24,861  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
17:35:25,204  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'default'
17:35:25,236  INFO LogHelper:46 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
17:35:25,353  INFO Version:54 - HHH000412: Hibernate Core {4.3.11.Final}
17:35:25,357  INFO Environment:224 - HHH000205: Loaded properties from resource hibernate.properties: {hibernate.dialect=org.hibernate.dialect.H2Dialect, hibernate.show_sql=true, hibernate.bytecode.use_reflection_optimizer=false, hibernate.hbm2ddl.import_files=initial_data.sql, entities.package=com.whoseturn.api.entities, hibernate.format_sql=false, hibernate.hbm2ddl.auto=create}
17:35:25,359  INFO Environment:346 - HHH000021: Bytecode provider name : javassist
17:35:25,496 DEBUG BasicTypeRegistry:146 - Adding type registration boolean -> org.hibernate.type.BooleanType@2dd25596
17:35:25,496 DEBUG BasicTypeRegistry:146 - Adding type registration boolean -> org.hibernate.type.BooleanType@2dd25596
17:35:25,497 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2dd25596
17:35:25,499 DEBUG BasicTypeRegistry:146 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6194110e
17:35:25,501 DEBUG BasicTypeRegistry:146 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1d385278
17:35:25,502 DEBUG BasicTypeRegistry:146 - Adding type registration yes_no -> org.hibernate.type.YesNoType@17b670c9
17:35:25,505 DEBUG BasicTypeRegistry:146 - Adding type registration byte -> org.hibernate.type.ByteType@172d2b0e
17:35:25,507 DEBUG BasicTypeRegistry:146 - Adding type registration byte -> org.hibernate.type.ByteType@172d2b0e
17:35:25,508 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@172d2b0e
17:35:25,510 DEBUG BasicTypeRegistry:146 - Adding type registration character -> org.hibernate.type.CharacterType@76fb8481
17:35:25,510 DEBUG BasicTypeRegistry:146 - Adding type registration char -> org.hibernate.type.CharacterType@76fb8481
17:35:25,511 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@76fb8481
17:35:25,513 DEBUG BasicTypeRegistry:146 - Adding type registration short -> org.hibernate.type.ShortType@49b74327
17:35:25,513 DEBUG BasicTypeRegistry:146 - Adding type registration short -> org.hibernate.type.ShortType@49b74327
17:35:25,514 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@49b74327
17:35:25,516 DEBUG BasicTypeRegistry:146 - Adding type registration integer -> org.hibernate.type.IntegerType@45212a07
17:35:25,518 DEBUG BasicTypeRegistry:146 - Adding type registration int -> org.hibernate.type.IntegerType@45212a07
17:35:25,519 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@45212a07
17:35:25,521 DEBUG BasicTypeRegistry:146 - Adding type registration long -> org.hibernate.type.LongType@1c748f37
17:35:25,521 DEBUG BasicTypeRegistry:146 - Adding type registration long -> org.hibernate.type.LongType@1c748f37
17:35:25,522 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1c748f37
17:35:25,524 DEBUG BasicTypeRegistry:146 - Adding type registration float -> org.hibernate.type.FloatType@3eb343d6
17:35:25,525 DEBUG BasicTypeRegistry:146 - Adding type registration float -> org.hibernate.type.FloatType@3eb343d6
17:35:25,525 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3eb343d6
17:35:25,527 DEBUG BasicTypeRegistry:146 - Adding type registration double -> org.hibernate.type.DoubleType@503858c9
17:35:25,528 DEBUG BasicTypeRegistry:146 - Adding type registration double -> org.hibernate.type.DoubleType@503858c9
17:35:25,528 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@503858c9
17:35:25,532 DEBUG BasicTypeRegistry:146 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7adb9581
17:35:25,532 DEBUG BasicTypeRegistry:146 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7adb9581
17:35:25,534 DEBUG BasicTypeRegistry:146 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@57b64d9f
17:35:25,534 DEBUG BasicTypeRegistry:146 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@57b64d9f
17:35:25,537 DEBUG BasicTypeRegistry:146 - Adding type registration string -> org.hibernate.type.StringType@4104d2b0
17:35:25,537 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4104d2b0
17:35:25,539 DEBUG BasicTypeRegistry:146 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7db0c677
17:35:25,541 DEBUG BasicTypeRegistry:146 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@18e2dd40
17:35:25,543 DEBUG BasicTypeRegistry:146 - Adding type registration url -> org.hibernate.type.UrlType@41685dd1
17:35:25,543 DEBUG BasicTypeRegistry:146 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@41685dd1
17:35:25,547 DEBUG BasicTypeRegistry:146 - Adding type registration date -> org.hibernate.type.DateType@4ab9bca5
17:35:25,547 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4ab9bca5
17:35:25,550 DEBUG BasicTypeRegistry:146 - Adding type registration time -> org.hibernate.type.TimeType@2fffb788
17:35:25,551 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2fffb788
17:35:25,553 DEBUG BasicTypeRegistry:146 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2049d0ec
17:35:25,554 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2049d0ec
17:35:25,554 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2049d0ec
17:35:25,557 DEBUG BasicTypeRegistry:146 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@13d2beb9
17:35:25,559 DEBUG BasicTypeRegistry:146 - Adding type registration calendar -> org.hibernate.type.CalendarType@37565853
17:35:25,560 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@37565853
17:35:25,561 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@37565853
17:35:25,562 DEBUG BasicTypeRegistry:146 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@355a38f3
17:35:25,564 DEBUG BasicTypeRegistry:146 - Adding type registration locale -> org.hibernate.type.LocaleType@5c858df3
17:35:25,565 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5c858df3
17:35:25,567 DEBUG BasicTypeRegistry:146 - Adding type registration currency -> org.hibernate.type.CurrencyType@1ab00c8f
17:35:25,567 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1ab00c8f
17:35:25,570 DEBUG BasicTypeRegistry:146 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@20d883b0
17:35:25,570 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@20d883b0
17:35:25,572 DEBUG BasicTypeRegistry:146 - Adding type registration class -> org.hibernate.type.ClassType@440a5e83
17:35:25,572 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@440a5e83
17:35:25,574 DEBUG BasicTypeRegistry:146 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6b5d78fd
17:35:25,575 DEBUG BasicTypeRegistry:146 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6b5d78fd
17:35:25,576 DEBUG BasicTypeRegistry:146 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1211ad85
17:35:25,577 DEBUG BasicTypeRegistry:146 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3c2f1317
17:35:25,579 DEBUG BasicTypeRegistry:146 - Adding type registration binary -> org.hibernate.type.BinaryType@245fdfa5
17:35:25,579 DEBUG BasicTypeRegistry:146 - Adding type registration byte[] -> org.hibernate.type.BinaryType@245fdfa5
17:35:25,579 DEBUG BasicTypeRegistry:146 - Adding type registration [B -> org.hibernate.type.BinaryType@245fdfa5
17:35:25,581 DEBUG BasicTypeRegistry:146 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@25719a02
17:35:25,581 DEBUG BasicTypeRegistry:146 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@25719a02
17:35:25,582 DEBUG BasicTypeRegistry:146 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@25719a02
17:35:25,583 DEBUG BasicTypeRegistry:146 - Adding type registration image -> org.hibernate.type.ImageType@6614713
17:35:25,585 DEBUG BasicTypeRegistry:146 - Adding type registration characters -> org.hibernate.type.CharArrayType@6a1ebd49
17:35:25,585 DEBUG BasicTypeRegistry:146 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6a1ebd49
17:35:25,586 DEBUG BasicTypeRegistry:146 - Adding type registration [C -> org.hibernate.type.CharArrayType@6a1ebd49
17:35:25,587 DEBUG BasicTypeRegistry:146 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6b32cd31
17:35:25,588 DEBUG BasicTypeRegistry:146 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6b32cd31
17:35:25,588 DEBUG BasicTypeRegistry:146 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6b32cd31
17:35:25,589 DEBUG BasicTypeRegistry:146 - Adding type registration text -> org.hibernate.type.TextType@33f5644b
17:35:25,591 DEBUG BasicTypeRegistry:146 - Adding type registration ntext -> org.hibernate.type.NTextType@4cfeaaae
17:35:25,597 DEBUG BasicTypeRegistry:146 - Adding type registration blob -> org.hibernate.type.BlobType@3f37c8bb
17:35:25,597 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3f37c8bb
17:35:25,598 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5e53c5d9
17:35:25,603 DEBUG BasicTypeRegistry:146 - Adding type registration clob -> org.hibernate.type.ClobType@7843d8a4
17:35:25,603 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7843d8a4
17:35:25,608 DEBUG BasicTypeRegistry:146 - Adding type registration nclob -> org.hibernate.type.NClobType@79da3df0
17:35:25,609 DEBUG BasicTypeRegistry:146 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@79da3df0
17:35:25,610 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1742965b
17:35:25,610 DEBUG BasicTypeRegistry:146 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@338d6e3
17:35:25,612 DEBUG BasicTypeRegistry:146 - Adding type registration serializable -> org.hibernate.type.SerializableType@550f286f
17:35:25,615 DEBUG BasicTypeRegistry:146 - Adding type registration object -> org.hibernate.type.ObjectType@5615c70c
17:35:25,615 DEBUG BasicTypeRegistry:146 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5615c70c
17:35:25,616 DEBUG BasicTypeRegistry:146 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2802eccd
17:35:25,616 DEBUG BasicTypeRegistry:146 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@50577366
17:35:25,616 DEBUG BasicTypeRegistry:146 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1c46cba5
17:35:25,617 DEBUG BasicTypeRegistry:146 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4c309050
17:35:25,617 DEBUG BasicTypeRegistry:146 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@73eb699f
17:35:25,617 DEBUG BasicTypeRegistry:146 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@184ce8c7
17:35:25,617 DEBUG BasicTypeRegistry:146 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@32fd1388
17:35:25,618 DEBUG BasicTypeRegistry:146 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7a07a797
17:35:25,634  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
17:35:25,974  INFO Dialect:145 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
17:35:26,156  INFO ASTQueryTranslatorFactory:47 - HHH000397: Using ASTQueryTranslatorFactory
17:35:26,189 TRACE TypeFactory:72 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@732727e0
17:35:26,235  INFO Version:27 - HV000001: Hibernate Validator 4.3.2.Final
17:35:27,130  INFO SchemaExport:344 - HHH000227: Running hbm2ddl schema export
17:35:27,132 DEBUG SQL:109 - drop table Flight if exists
Hibernate: drop table Flight if exists
17:35:27,133 DEBUG SQL:109 - drop table User if exists
Hibernate: drop table User if exists
17:35:27,134 DEBUG SQL:109 - create table Flight (id bigint generated by default as identity, primary key (id))
Hibernate: create table Flight (id bigint generated by default as identity, primary key (id))
17:35:27,140 DEBUG SQL:109 - create table User (id bigint generated by default as identity, createDate timestamp not null, lastUpdate timestamp not null, username varchar(255) not null, primary key (id))
Hibernate: create table User (id bigint generated by default as identity, createDate timestamp not null, lastUpdate timestamp not null, username varchar(255) not null, primary key (id))
17:35:27,142 DEBUG SQL:109 - alter table User add constraint UK_jreodf78a7pl5qidfh43axdfb unique (username)
Hibernate: alter table User add constraint UK_jreodf78a7pl5qidfh43axdfb unique (username)
17:35:27,151 ERROR SchemaExport:457 - HHH000388: Unsuccessful: INSERT INTO BlogPost (id, createDate, lastUpdate, postContent, title) VALUES (1,sysdate, sysdate, 'because I ride to Gas Town.', 'Why do I write so good posts ?')
17:35:27,152 ERROR SchemaExport:458 - Table "BLOGPOST" not found; SQL statement:
INSERT INTO BlogPost (id, createDate, lastUpdate, postContent, title) VALUES (1,sysdate, sysdate, 'because I ride to Gas Town.', 'Why do I write so good posts ?') [42102-190]
17:35:27,152 ERROR SchemaExport:457 - HHH000388: Unsuccessful: INSERT INTO BlogPost_User (BlogPost_id, authors_id) VALUES (1, 1)
17:35:27,153 ERROR SchemaExport:458 - Table "BLOGPOST_USER" not found; SQL statement:
INSERT INTO BlogPost_User (BlogPost_id, authors_id) VALUES (1, 1) [42102-190]
17:35:27,153 ERROR SchemaExport:457 - HHH000388: Unsuccessful: INSERT INTO BlogTag (id, createDate, lastUpdate, label) VALUES (1,sysdate, sysdate, 'The one truth.')
17:35:27,154 ERROR SchemaExport:458 - Table "BLOGTAG" not found; SQL statement:
INSERT INTO BlogTag (id, createDate, lastUpdate, label) VALUES (1,sysdate, sysdate, 'The one truth.') [42102-190]
17:35:27,154 ERROR SchemaExport:457 - HHH000388: Unsuccessful: INSERT INTO BlogPost_BlogTag (BlogPost_id, tags_id) VALUES (1, 1)
17:35:27,155 ERROR SchemaExport:458 - Table "BLOGPOST_BLOGTAG" not found; SQL statement:
INSERT INTO BlogPost_BlogTag (BlogPost_id, tags_id) VALUES (1, 1) [42102-190]
17:35:27,155  INFO SchemaExport:406 - HHH000230: Schema export complete
17:35:27,621 DEBUG SQL:109 - select flight0_.id as id1_0_ from Flight flight0_
Hibernate: select flight0_.id as id1_0_ from Flight flight0_
17:35:27,646 DEBUG SQL:109 - select flight0_.id as id1_0_ from Flight flight0_
Hibernate: select flight0_.id as id1_0_ from Flight flight0_
17:35:27,652 DEBUG SQL:109 - select flight0_.id as id1_0_ from Flight flight0_
Hibernate: select flight0_.id as id1_0_ from Flight flight0_
17:35:27,664 DEBUG SQL:109 - insert into Flight (id) values (null)
Hibernate: insert into Flight (id) values (null)
17:35:27,675 DEBUG SQL:109 - select flight0_.id as id1_0_ from Flight flight0_
Hibernate: select flight0_.id as id1_0_ from Flight flight0_
17:35:27,680 TRACE BasicExtractor:78 - extracted value ([id1_0_] : [BIGINT]) - [1]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
